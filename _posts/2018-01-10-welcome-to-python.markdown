---
layout: post
title:  "Python и с чем его едят!"
date:   2018-01-10 09:11:00 +1000
categories: python
---

Язык программирования Python... Как говорит википедия
>Python - высокоуровневый язык программирования общего назначения, ориентированный на повышение производительности разработчика и читаемости кода 

Это динамически типизированный, интерпретируемый язык, с поддержкой нескольких парадигм программирования (структурное, объектно-ориентированное, функциональное, иперативное, аспектно-ориентированное)

Язык высокого уровня с высокой степенью абстракции.

Портирован на все основные типы платформ от *nix систм до windows и смартфонов.

Существует две основные ветки python ветка 2.x и ветка 3.x. Код для версии 3.x  обратно не совместим с веткой 2.x, однако и исполнение кода 2.x в среде 3.x часто будет выдавать ошибки. 

Ниже приведен пример выражений в python 
{% highlight python %}
>> 2+3
5
>> 2**3
8
>> print("Hello, %s!!"%("Vasya"))
Hello, Vasya!!
>> name="Vasya" 
>> print(f"Hello, {name}!!")# начиная с версии 3.6
Hello, Vasya!!
{% endhighlight %}

Python можно использовать как для написпния программ, так и для написания shell-скриптов.

### Исполняемый файл
В *nix системах для сосздания исполняемого файла необходимо в первой строке файла с программой написать:
{% highlight python %}
#!/usr/bin/env python3
{% endhighlight %}

и указать атрибуты файлу

{% highlight bash %}
chmod u+x file.py
{% endhighlight %}

здесь мы разрешаем исполнение файла его создателю.

___В этом блоге будет рассматриваться ветка 3.x___

### Какой дистрибутив ставить?
Возникает вполне резонный вопрос: где брать python и как его ставить? Практически во всех *nix подобных операционных системах python уже установлен с правами суперпользователя. Это не всегда удобно. Кроме того, в некоторых операционных системах (MacOS) до сих пор используется 2-я ветка питона, в то время как на других (ArchLinux, Manjaro, etc..) предустановлена 3-я ветка. Также версии интерпретатора могут отличаться, а соответственно, возможны проблемы совместимости готовой программы.

Гораздо удобнее устанавливать отдельно python с правами пользователя. Это можно сделать вручную, собственными силами скачивать интерпретатор, устанавливать и настраивать его, собирать все необходимые пакеты и прочее. Можно пойти другим путем и воспользоваться готовым решением:

1.  [Miniconda](https://conda.io/miniconda.html)
2. [Enthought Canopy](https://www.enthought.com/product/canopy/)
3. [WinPython](https://winpython.github.io)

На мой взгляд, наиболее удобным является [Miniconda](https://conda.io/miniconda.html), и этому способствует ряд свойств этого дистрибутива:

+ Наличие собственной системы управления пвкетами
+ математические библиотеки NumPy, SciPy, etc. собраны с библиотеками Intel MKL.
+ все необходимые библиотеки и компоненты (не питоновские в том числе) устанавливаются в локальную папку, не захломляя систему. 
+ можно установить несколько окружений с различными набором пакетов и версией интерпретатора

### И все же как устанавливать?

Переходим на сайт  [Miniconda](https://conda.io/miniconda.html) и скачиваем нужный дистрибутив (в нашем случае версия 3.6) для своей архитектуры и выполняем установку посредством запуска файла. Подробно об этом написано на странице [инструкция по установке](https://conda.io/docs/user-guide/install/index.html). 

### Установка пакетов
Установка пакетов происходит с помощью команды `conda install <имя пакета>`.

Для своей работы я устанавливаю следующий комплект пакетов:

1. [Numpy](http://www.numpy.org) - библиотека для работы с многомерными массивами
2. [SciPy](https://www.scipy.org) - библиотека - надмножество NumPy, представляет набор функция для анализа (интерполяция, обработка сигналов, интегрирование и прочее..)
3. [Matplotlib](http://matplotlib.org/) - библиотека дву и трехмерной графики
4. [Pandas](http://pandas.pydata.org/) - библиотека для работы с табличными данными и рядами
5. [IPython](http://ipython.org/) - оболочка -интерпретатор
