---
layout: post
title:  "Основные операторы Python"
date:   2018-01-10 09:36:00 +1000
categories: python
---

## Функция **print**

Формат вызова:

**print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)**

выводит в файл _file_ значение _value_, добавляя в конце вывода строку _end_
элементы _value_ разделены строкой _sep_. Если _flush=**True**_, тогда после
выполнения команды посылается команда очистки буферов ввода/вывода.

_value_ может быть любым объектом _python_

чаще всего эта функция используется для вывода строковых сообщений.

### форматрирование строк
для того, чтобы вывести форматрованную строку на экран, нужно использовать строку с символами форматирования:

%s - подстановка строки

%d - подстановка целого числа

%f - подстановка числа с плавающей точкой

Подстановочные аргументы передаются в строку форматирования с помощью оператора %, за которым следует кортэж с подстановочными аргументами.

{% highlight python%}
>> str_tmp = "2+3=%4d"%(5)
>> print("2+3=%d"%(5))
2+3=5
>> print(str_tmp)
2+3=   5
{% endhighlight %}

## Функция **input**

Формат вызова:

**input(_prompt=None_, /)**

Читает строку со стандартного ввода. Символ перевода строки опускается.

Если _prompt_ указан, то он выводится в стандартный вывод без символа перевода строки.

Если пользователь послал сигнал EOF (*nix: Ctrl-D, Windows: Ctrl-Z-Return), вызывает исключение EOFError. На *nix  системах используется библиотека readline, если таковая установлена.


